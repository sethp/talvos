# Run a reduction, checking that callbacks are called as expected.

MODULE ../misc/reduce.spvasm
ENTRY reduce

BUFFER n      4  DATA   UINT32 16
BUFFER data   64 SERIES UINT32 0 1
BUFFER result 8  FILL   UINT32 0

DESCRIPTOR_SET 0 0 0 n
DESCRIPTOR_SET 0 1 0 data
DESCRIPTOR_SET 0 2 0 result

DISPATCH 2 1 1

DUMP UINT32 result

# CHECK: plugin created

# CHECK: host memory store
# CHECK: host memory store
# CHECK: host memory store
# CHECK: host memory store
# CHECK: host memory store
# CHECK: host memory store
# CHECK: host memory store
# CHECK: host memory store
# CHECK: host memory store
# CHECK: host memory store
# CHECK: host memory store
# CHECK: host memory store
# CHECK: host memory store
# CHECK: host memory store
# CHECK: host memory store
# CHECK: host memory store
# CHECK: host memory store
# CHECK: host memory store
# CHECK: host memory store

# CHECK: command begin

# CHECK: invocation begin
# CHECK: invocation begin
# CHECK: invocation begin
# CHECK: invocation begin
# CHECK: invocation begin
# CHECK: invocation begin
# CHECK: invocation begin
# CHECK: invocation begin
# CHECK: workgroup begin

# CHECK: memory load
# CHECK: memory store
# CHECK: OpControlBarrier
# CHECK: memory load
# CHECK: memory store
# CHECK: OpControlBarrier
# CHECK: memory load
# CHECK: memory store
# CHECK: OpControlBarrier
# CHECK: memory load
# CHECK: memory store
# CHECK: OpControlBarrier
# CHECK: memory load
# CHECK: memory store
# CHECK: OpControlBarrier
# CHECK: memory load
# CHECK: memory store
# CHECK: OpControlBarrier
# CHECK: memory load
# CHECK: memory store
# CHECK: OpControlBarrier
# CHECK: memory load
# CHECK: memory store
# CHECK: OpControlBarrier

# CHECK: workgroup barrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: workgroup barrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: workgroup barrier

# CHECK: memory load
# CHECK: memory store

# CHECK: OpReturn
# CHECK: invocation complete
# CHECK: OpReturn
# CHECK: invocation complete
# CHECK: OpReturn
# CHECK: invocation complete
# CHECK: OpReturn
# CHECK: invocation complete
# CHECK: OpReturn
# CHECK: invocation complete
# CHECK: OpReturn
# CHECK: invocation complete
# CHECK: OpReturn
# CHECK: invocation complete
# CHECK: OpReturn
# CHECK: invocation complete
# CHECK: workgroup complete

# CHECK: invocation begin
# CHECK: invocation begin
# CHECK: invocation begin
# CHECK: invocation begin
# CHECK: invocation begin
# CHECK: invocation begin
# CHECK: invocation begin
# CHECK: invocation begin
# CHECK: workgroup begin

# CHECK: memory load
# CHECK: memory store
# CHECK: OpControlBarrier
# CHECK: memory load
# CHECK: memory store
# CHECK: OpControlBarrier
# CHECK: memory load
# CHECK: memory store
# CHECK: OpControlBarrier
# CHECK: memory load
# CHECK: memory store
# CHECK: OpControlBarrier
# CHECK: memory load
# CHECK: memory store
# CHECK: OpControlBarrier
# CHECK: memory load
# CHECK: memory store
# CHECK: OpControlBarrier
# CHECK: memory load
# CHECK: memory store
# CHECK: OpControlBarrier
# CHECK: memory load
# CHECK: memory store
# CHECK: OpControlBarrier

# CHECK: workgroup barrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: workgroup barrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: OpControlBarrier
# CHECK: workgroup barrier

# CHECK: memory load
# CHECK: memory store

# CHECK: OpReturn
# CHECK: invocation complete
# CHECK: OpReturn
# CHECK: invocation complete
# CHECK: OpReturn
# CHECK: invocation complete
# CHECK: OpReturn
# CHECK: invocation complete
# CHECK: OpReturn
# CHECK: invocation complete
# CHECK: OpReturn
# CHECK: invocation complete
# CHECK: OpReturn
# CHECK: invocation complete
# CHECK: OpReturn
# CHECK: invocation complete
# CHECK: workgroup complete

# CHECK: command complete

# Output is slightly mangled here as the plugin interferes with DUMP output.
# TODO not in single-threaded mode!
# CHECK: Buffer 'result' (8 bytes):
# CHECK:   result[0] = 28
# CHECK:   result[1] = 92

# CHECK: plugin destroyed
